{"ast":null,"code":"var _jsxFileName = \"/home/zyme/ros_ws/romviz/romviz/src/components/map.jsx\";\nimport React, { Component } from \"react\";\n// import Config from \"../script/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: false\n    };\n    this.ros = null; // Initialize ROS connection instance\n    this.init_connection();\n  }\n  init_connection() {\n    // Initialize the ROS connection\n    this.ros = new ROSLIB.Ros({\n      url: \"ws://localhost:9090\" // Update this with your ROS 2 WebSocket server URL\n    });\n\n    // Define ROS connection events\n    this.ros.on(\"connection\", () => {\n      console.log(\"Connection to ROS 2 established!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.ros.on(\"error\", error => {\n      console.error(\"Error connecting to ROS 2:\", error);\n      this.setState({\n        connected: false\n      });\n    });\n    this.ros.on(\"close\", () => {\n      console.log(\"Connection to ROS 2 closed.\");\n      this.setState({\n        connected: false\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" This is map Component \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Map","constructor","state","connected","ros","init_connection","ROSLIB","Ros","url","on","console","log","setState","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/zyme/ros_ws/romviz/romviz/src/components/map.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n// import Config from \"../script/config\";\n\nclass Map extends Component {\n\n  state = { connected: false };\n\n  constructor() {\n      super();\n      this.ros = null; // Initialize ROS connection instance\n      this.init_connection();\n  }\n\n\n  init_connection() {\n    // Initialize the ROS connection\n    this.ros = new ROSLIB.Ros({\n        url: \"ws://localhost:9090\", // Update this with your ROS 2 WebSocket server URL\n    });\n\n    // Define ROS connection events\n    this.ros.on(\"connection\", () => {\n        console.log(\"Connection to ROS 2 established!\");\n        this.setState({ connected: true });\n    });\n\n    this.ros.on(\"error\", (error) => {\n        console.error(\"Error connecting to ROS 2:\", error);\n        this.setState({ connected: false });\n    });\n\n    this.ros.on(\"close\", () => {\n        console.log(\"Connection to ROS 2 closed.\");\n        this.setState({ connected: false });\n    });\n}\n\n  render() {\n    return<div> This is map Component </div>\n  }\n}\n\n\nexport default Map;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASH,SAAS,CAAC;EAI1BI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KAHZC,KAAK,GAAG;MAAEC,SAAS,EAAE;IAAM,CAAC;IAIxB,IAAI,CAACC,GAAG,GAAG,IAAI,CAAC,CAAC;IACjB,IAAI,CAACC,eAAe,CAAC,CAAC;EAC1B;EAGAA,eAAeA,CAAA,EAAG;IAChB;IACA,IAAI,CAACD,GAAG,GAAG,IAAIE,MAAM,CAACC,GAAG,CAAC;MACtBC,GAAG,EAAE,qBAAqB,CAAE;IAChC,CAAC,CAAC;;IAEF;IACA,IAAI,CAACJ,GAAG,CAACK,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,IAAI,CAACC,QAAQ,CAAC;QAAET,SAAS,EAAE;MAAK,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,IAAI,CAACC,GAAG,CAACK,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;MAC5BH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAI,CAACD,QAAQ,CAAC;QAAET,SAAS,EAAE;MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,IAAI,CAACC,GAAG,CAACK,EAAE,CAAC,OAAO,EAAE,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,IAAI,CAACC,QAAQ,CAAC;QAAET,SAAS,EAAE;MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;EACN;EAEEW,MAAMA,CAAA,EAAG;IACP,oBAAMf,OAAA;MAAAgB,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;AACF;AAGA,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}