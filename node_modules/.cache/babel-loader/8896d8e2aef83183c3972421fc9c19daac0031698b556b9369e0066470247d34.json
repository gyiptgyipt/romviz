{"ast":null,"code":"import React,{useEffect,useRef}from'react';import ROSLIB from'roslib';import ROS2D from'ros2d';import{jsx as _jsx}from\"react/jsx-runtime\";const MapViewer=_ref=>{let{rosUrl,mapDivId=\"map\",width=800,height=600}=_ref;const viewerRef=useRef(null);useEffect(()=>{// Connect to ROS\nconst ros=new ROSLIB.Ros({url:rosUrl});// Create the viewer\nconst viewer=new ROS2D.Viewer({divID:mapDivId,width,height});// Store viewer in ref for later use\nviewerRef.current=viewer;// Set up the grid client\nconst gridClient=new ROS2D.OccupancyGridClient({ros,rootObject:viewer.scene});// Center the map once the grid is loaded\ngridClient.on(\"change\",()=>{viewer.scaleToDimensions(gridClient.currentGrid.width,gridClient.currentGrid.height);viewer.shift(gridClient.currentGrid.pose.position.x,gridClient.currentGrid.pose.position.y);});return()=>{// Cleanup if needed (e.g., closing the ROS connection)\nros.close();};},[rosUrl,mapDivId,width,height]);return/*#__PURE__*/_jsx(\"div\",{id:mapDivId,style:{width,height}});};export default MapViewer;","map":{"version":3,"names":["React","useEffect","useRef","ROSLIB","ROS2D","jsx","_jsx","MapViewer","_ref","rosUrl","mapDivId","width","height","viewerRef","ros","Ros","url","viewer","Viewer","divID","current","gridClient","OccupancyGridClient","rootObject","scene","on","scaleToDimensions","currentGrid","shift","pose","position","x","y","close","id","style"],"sources":["/home/zyme/ros_ws/romviz/romviz/src/components/MapViewer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ROSLIB from 'roslib';\nimport ROS2D from 'ros2d';\n\nconst MapViewer = ({ rosUrl, mapDivId = \"map\", width = 800, height = 600 }) => {\n  const viewerRef = useRef(null);\n\n  useEffect(() => {\n    // Connect to ROS\n    const ros = new ROSLIB.Ros({\n      url: rosUrl,\n    });\n\n    // Create the viewer\n    const viewer = new ROS2D.Viewer({\n      divID: mapDivId,\n      width,\n      height,\n    });\n\n    // Store viewer in ref for later use\n    viewerRef.current = viewer;\n\n    // Set up the grid client\n    const gridClient = new ROS2D.OccupancyGridClient({\n      ros,\n      rootObject: viewer.scene,\n    });\n\n    // Center the map once the grid is loaded\n    gridClient.on(\"change\", () => {\n      viewer.scaleToDimensions(gridClient.currentGrid.width, gridClient.currentGrid.height);\n      viewer.shift(gridClient.currentGrid.pose.position.x, gridClient.currentGrid.pose.position.y);\n    });\n\n    return () => {\n      // Cleanup if needed (e.g., closing the ROS connection)\n      ros.close();\n    };\n  }, [rosUrl, mapDivId, width, height]);\n\n  return <div id={mapDivId} style={{ width, height }} />;\n};\n\nexport default MapViewer;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAC3B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAA6D,IAA5D,CAAEC,MAAM,CAAEC,QAAQ,CAAG,KAAK,CAAEC,KAAK,CAAG,GAAG,CAAEC,MAAM,CAAG,GAAI,CAAC,CAAAJ,IAAA,CACxE,KAAM,CAAAK,SAAS,CAAGX,MAAM,CAAC,IAAI,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAa,GAAG,CAAG,GAAI,CAAAX,MAAM,CAACY,GAAG,CAAC,CACzBC,GAAG,CAAEP,MACP,CAAC,CAAC,CAEF;AACA,KAAM,CAAAQ,MAAM,CAAG,GAAI,CAAAb,KAAK,CAACc,MAAM,CAAC,CAC9BC,KAAK,CAAET,QAAQ,CACfC,KAAK,CACLC,MACF,CAAC,CAAC,CAEF;AACAC,SAAS,CAACO,OAAO,CAAGH,MAAM,CAE1B;AACA,KAAM,CAAAI,UAAU,CAAG,GAAI,CAAAjB,KAAK,CAACkB,mBAAmB,CAAC,CAC/CR,GAAG,CACHS,UAAU,CAAEN,MAAM,CAACO,KACrB,CAAC,CAAC,CAEF;AACAH,UAAU,CAACI,EAAE,CAAC,QAAQ,CAAE,IAAM,CAC5BR,MAAM,CAACS,iBAAiB,CAACL,UAAU,CAACM,WAAW,CAAChB,KAAK,CAAEU,UAAU,CAACM,WAAW,CAACf,MAAM,CAAC,CACrFK,MAAM,CAACW,KAAK,CAACP,UAAU,CAACM,WAAW,CAACE,IAAI,CAACC,QAAQ,CAACC,CAAC,CAAEV,UAAU,CAACM,WAAW,CAACE,IAAI,CAACC,QAAQ,CAACE,CAAC,CAAC,CAC9F,CAAC,CAAC,CAEF,MAAO,IAAM,CACX;AACAlB,GAAG,CAACmB,KAAK,CAAC,CAAC,CACb,CAAC,CACH,CAAC,CAAE,CAACxB,MAAM,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,MAAM,CAAC,CAAC,CAErC,mBAAON,IAAA,QAAK4B,EAAE,CAAExB,QAAS,CAACyB,KAAK,CAAE,CAAExB,KAAK,CAAEC,MAAO,CAAE,CAAE,CAAC,CACxD,CAAC,CAED,cAAe,CAAAL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}